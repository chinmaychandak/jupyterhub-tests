proxy:
  secretToken: "1ceceb779b78db81ad076c603e7924f8e6164cf87dfe92f4f8dc135b130932f4"

hub:
  extraConfig:
    kratosConfig.py: |
      c.KubeSpawner.http_timeout = 1800
      c.KubeSpawner.start_timeout = 1800

auth:
  type: "custom"
  custom:
    className: "nativeauthenticator.NativeAuthenticator"
    config:
      open_signup: true
#  dummy:
#    password: custreamz
  admin:
    access: true
    users:
      - kratos

cull:
  enabled: true
  timeout: 1800
  every: 600

singleuser:

  defaultUrl: "/lab"
  memory:
    guarantee: 2G
    limit: 2G
  cpu:
    guarantee: 1
    limit: 1
  storage:
    capacity: 10Gi
    dynamic:
      storageClass: gp2

  image:
    name: rapidsai/rapidsai
    tag: 0.17-cuda10.2-runtime-ubuntu18.04-py3.7

  profileList:
    - display_name: "RAPIDS"
      description: "Dedicated RAPIDS Profile"
      kubespawner_override:

        environment:
          tenant: kratos
          profile: rapids
          GRANT_SUDO: "yes"
          EXTRA_PIP_PACKAGES: jupyterhub
          EXTRA_APT_PACKAGES: "bash-completion"

        lifecycle_hooks:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  echo "envs_dirs:\n  - /home/jovyan/my-conda-envs/" > $HOME/.condarc;

        working_dir: "/home/jovyan"

        args: [ "--allow-root", "--no-browser", "--NotebookApp.token=''" ]

        cmd: [ "jupyterhub-singleuser" ]

        uid: 0
        gid: 0

    - display_name: "Spark ETL, ML"
      description: "Spark ETL, ML Profile"
      kubespawner_override:

        image: jupyter/minimal-notebook:latest

        environment:
          tenant: kratos
          profile: spark-etl-ml
          GRANT_SUDO: "yes"
          NOTEBOOK_ARGS: "--allow-root"

        lifecycle_hooks:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  echo "envs_dirs:\n  - /home/jovyan/my-conda-envs/" > $HOME/.condarc;
                  conda create -y -q -n py3.7 -c anaconda python=3.7 ipykernel;

        cmd: start-singleuser.sh

        uid: 0
        gid: 0
